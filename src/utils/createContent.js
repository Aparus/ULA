import fs from 'fs'
import path from 'path'
import { getFilesOfDir, writeFileSyncRecursive } from './fsUtils.js'
import { contentMDtoAssetJS } from './contentMDtoAssetJS.js'

// main content.md and all translations: content.en_US.md,...
const contentFileNames = getFilesOfDir('./content').filter(elem =>
	elem.includes('content')
)

// codes of langs: ['ru', 'en', 'ar_SA']
const translationCodes = contentFileNames
	.filter(elem => elem !== 'content.md')
	.map(elem => elem.replace(/^content\./, '').replace(/\.md$/, ''))

const contentFolder = 'content'

const generateContentAssets = () => {
	contentFileNames.forEach(fileName => {
		const mdFileContent = fs
			.readFileSync(path.join(contentFolder, fileName), 'utf-8')
			.replace(/\r/g, '') // in windows somehow appears this symbols
		const infoAndChapters = contentMDtoAssetJS(mdFileContent) // { info, chapters }
		const content =
			fileName === 'content.md'
				? { ...infoAndChapters, translations: translationCodes }
				: infoAndChapters

		const beforeContent = `// autogenerated from /${contentFolder}/${fileName}
    // via /src/utils/createContent.js
    export default `
		const filePath = path.join('./assets', fileName.replace(/\.md$/, '.js'))
		writeFileSyncRecursive(
			filePath,
			beforeContent + JSON.stringify(content),
			'utf-8'
		)
	})
}

const generateTranslationsMap = () => {
	const trString = trCode =>
		`\t'${trCode}': require('./content.${trCode}.js'),\n` // "ru": require('./content.ru.js'),
	const translationsAsset = translationCodes.reduce(
		(prevItem, currentItem) => prevItem + trString(currentItem),
		''
	)
	const translationsAssetFile = `//autogenerated from files: /${contentFolder}/content.LANG_CODE.md
// via /src/utils/createContent.js
export default {
${translationsAsset}}`

	writeFileSyncRecursive(
		path.join('./assets', 'translations.js'),
		translationsAssetFile,
		'utf-8'
	)
}

generateContentAssets()
generateTranslationsMap()

console.log('content updated for ', contentFileNames)
